import type { Ref } from 'vue';
import type { PrimitiveProps } from '../Primitive';
import type { Direction, ScrollType } from './types';
export interface ScrollAreaRootContext {
    type: Ref<ScrollType>;
    dir: Ref<Direction>;
    scrollHideDelay: Ref<number>;
    scrollArea: Ref<HTMLElement | undefined>;
    viewport: Ref<HTMLElement | undefined>;
    onViewportChange(viewport: HTMLElement | null): void;
    content: Ref<HTMLElement | undefined>;
    onContentChange(content: HTMLElement): void;
    scrollbarX: Ref<HTMLElement | undefined>;
    onScrollbarXChange(scrollbar: HTMLElement | null): void;
    scrollbarXEnabled: Ref<boolean>;
    onScrollbarXEnabledChange(rendered: boolean): void;
    scrollbarY: Ref<HTMLElement | undefined>;
    onScrollbarYChange(scrollbar: HTMLElement | null): void;
    scrollbarYEnabled: Ref<boolean>;
    onScrollbarYEnabledChange(rendered: boolean): void;
    onCornerWidthChange(width: number): void;
    onCornerHeightChange(height: number): void;
}
export declare const injectScrollAreaRootContext: <T extends ScrollAreaRootContext | null | undefined = ScrollAreaRootContext>(fallback?: T | undefined) => T extends null ? ScrollAreaRootContext | null : ScrollAreaRootContext, provideScrollAreaRootContext: (contextValue: ScrollAreaRootContext) => void;
export interface ScrollAreaRootProps extends PrimitiveProps {
    type?: ScrollType;
    dir?: Direction;
    scrollHideDelay?: number;
}
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    dir: {
        type: import("vue").PropType<Direction>;
    };
    type: {
        type: import("vue").PropType<ScrollType>;
        default: string;
    };
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag | import("vue").Component>;
    };
    scrollHideDelay: {
        type: import("vue").PropType<number>;
        default: number;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    dir: {
        type: import("vue").PropType<Direction>;
    };
    type: {
        type: import("vue").PropType<ScrollType>;
        default: string;
    };
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag | import("vue").Component>;
    };
    scrollHideDelay: {
        type: import("vue").PropType<number>;
        default: number;
    };
}>>, {
    type: ScrollType;
    scrollHideDelay: number;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
