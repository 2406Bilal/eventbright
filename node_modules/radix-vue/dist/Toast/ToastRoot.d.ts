import type { ToastRootImplEmits, ToastRootImplProps } from "./ToastRootImpl";
export type ToastRootEmits = ToastRootImplEmits & {
    'update:open': [value: boolean];
};
export interface ToastRootProps extends ToastRootImplProps {
    defaultOpen?: boolean;
    /**
     * Used to force mounting when more control is needed. Useful when
     * controlling animation with Vue animation libraries.
     */
    forceMount?: boolean;
}
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    type: {
        type: import("vue").PropType<"background" | "foreground">;
        default: string;
    };
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import("../Primitive").AsTag | import("vue").Component>;
        default: string;
    };
    defaultOpen: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    open: {
        type: import("vue").PropType<boolean>;
        default: undefined;
    };
    forceMount: {
        type: import("vue").PropType<boolean>;
    };
    duration: {
        type: import("vue").PropType<number>;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    close: () => void;
    pause: () => void;
    "update:open": (value: boolean) => void;
    resume: () => void;
    escapeKeyDown: (event: KeyboardEvent) => void;
    swipeStart: (event: import("./utils").SwipeEvent) => void;
    swipeMove: (event: import("./utils").SwipeEvent) => void;
    swipeCancel: (event: import("./utils").SwipeEvent) => void;
    swipeEnd: (event: import("./utils").SwipeEvent) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    type: {
        type: import("vue").PropType<"background" | "foreground">;
        default: string;
    };
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import("../Primitive").AsTag | import("vue").Component>;
        default: string;
    };
    defaultOpen: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    open: {
        type: import("vue").PropType<boolean>;
        default: undefined;
    };
    forceMount: {
        type: import("vue").PropType<boolean>;
    };
    duration: {
        type: import("vue").PropType<number>;
    };
}>> & {
    "onUpdate:open"?: ((value: boolean) => any) | undefined;
    onPause?: (() => any) | undefined;
    onEscapeKeyDown?: ((event: KeyboardEvent) => any) | undefined;
    onClose?: (() => any) | undefined;
    onResume?: (() => any) | undefined;
    onSwipeStart?: ((event: import("./utils").SwipeEvent) => any) | undefined;
    onSwipeMove?: ((event: import("./utils").SwipeEvent) => any) | undefined;
    onSwipeCancel?: ((event: import("./utils").SwipeEvent) => any) | undefined;
    onSwipeEnd?: ((event: import("./utils").SwipeEvent) => any) | undefined;
}, {
    type: "background" | "foreground";
    as: import("../Primitive").AsTag | import("vue").Component;
    defaultOpen: boolean;
    open: boolean;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
