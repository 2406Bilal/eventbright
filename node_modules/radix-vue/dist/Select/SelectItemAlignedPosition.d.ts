import type { Ref } from 'vue';
import type { PrimitiveProps } from '../Primitive';
interface SelectItemAlignedPositionContext {
    contentWrapper?: Ref<HTMLElement | undefined>;
    shouldExpandOnScrollRef?: Ref<boolean>;
    onScrollButtonChange: (node: HTMLElement | undefined) => void;
}
export interface SelectItemAlignedPositionProps extends PrimitiveProps {
}
export declare const injectSelectItemAlignedPositionContext: <T extends SelectItemAlignedPositionContext | null | undefined = SelectItemAlignedPositionContext>(fallback?: T | undefined) => T extends null ? SelectItemAlignedPositionContext | null : SelectItemAlignedPositionContext, provideSelectItemAlignedPositionContext: (contextValue: SelectItemAlignedPositionContext) => void;
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag | import("vue").Component>;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    placed: () => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag | import("vue").Component>;
    };
}>> & {
    onPlaced?: (() => any) | undefined;
}, {}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
